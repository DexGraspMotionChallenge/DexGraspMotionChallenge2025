graphics_device_id: 0

pnG:
  sample_method: 'average'
  sample_num_points: 2048
  batch_norm_pnfeat: False

dexrep:
  sample_method: 'average'
  sample_num_points: 2048
  batch_norm_pnfeat: False
  ambient_voxel_length: 0.02
  dis_max_range: 0.2

trajs_path:
  train: './dataset/train'
  valid: './dataset/valid'

env:
  env_name: "shadow_hand_grasp_dexrep"
  env_mode: "extract_obs"  #"bc_env_infer"
  seq_start_pos_uniform: True
  test_num: 40
  bc_model_name: 'ActorCriticDexRep'
  load_vis_hand_model: True
  traj_down_sample: False

  numEnvs: 1024
  envSpacing: 0.55
  episodeLength: 200 # 250
  enableDebugVis: False
  aggregateMode: 1

  random_prior: False
  random_time: True
  repose_z: True
  goal_cond: False
  num_objs: 40

  obj_type: 'one' # 'seen'
  data_aug: True

  seen_object_code_dict:
    - 'sem-Candle-1be58678b919b12bc5fe7f65b41f3b19'
    - 'core-can-51f0b5ce9711f63bb15a1cf05bc3d210'
    - 'core-camera-4cd861035c740db5a33f3afcb8763f26'
    - 'core-jar-e9462bac4a8f334369df8a5173959bca'
    - 'sem-Lock-856b24cbdfb69fafcb0c0d433974e32b'

  unseen_object_code_dict:
    - 'sem-Lock-856b24cbdfb69fafcb0c0d433974e32b'


  flat_vis_test: False
  traj_modify: False
  use_pre_fixed_actions: False
  infer_batch_size: 20

  set_obj_mass: True
  obj_mass: 0.2
  obj_friction: 1
  random_obj_mass_friction: False
  tips_add_ang: 0.

  damping_w: 1
  stiffness_w: 6

  img_save: False
  viewer_video_save: False
  each_env_video_save: True
  random_select_save: False


  grasp_data_process: True
  table_height: 0.6


  stiffnessScale: 1.0
  forceLimitScale: 1.0
  useRelativeControl: False
  dofSpeedScale: 20.0
  actionsMovingAverage: 1.0
  controlFrequencyInv: 3 #3 #2 #4 # 60 Hz

  startPositionNoise: 0.0
  startRotationNoise: 0.0

  resetPositionNoise: 0.0
  resetRotationNoise: 0.0
  resetDofPosRandomInterval: 0.0
  resetDofVelRandomInterval: 0.0

  distRewardScale: 20
  transition_scale: 0.5
  orientation_scale: 0.1
  rotRewardScale: 1.0
  rotEps: 0.1
  actionPenaltyScale: -0.0002
  reachGoalBonus: 250
  fallDistance: 0.4
  fallPenalty: 0.0

  objectType: "pot" 
  observationType: "dexrep" #'obs_pcds', obs_h2o #"dexrep"  #"pnG"


  obs_dim:
    prop: 100 #134 #128 #134 # 211 #propriception
    dexrep_sensor: 1080
    dexrep_pnl: 1280
    pnG: 1024

  handAgentIndex: "[[0, 1, 2, 3, 4, 5]]"
  asymmetric_observations: False
  successTolerance: 0.1
  printNumSuccesses: False
  maxConsecutiveSuccesses: 0

  clip_observations: 5.0
  asset:
    assetRoot: "../assets"
    assetFileName: "mjcf_free/open_ai_assets/hand/shadow_hand.xml"
    assetFileNameBlock: "urdf/objects/cube_multicolor.urdf"
    assetFileNameBall: "urdf/objects/ball.urdf"
    assetFileNameEgg: "mjcf/open_ai_assets/hand/egg.xml"
    assetFileNamePen: "mjcf/open_ai_assets/hand/pen.xml"
    assetFileNameObj: "/meshdata/"
    assetFileNameObj_raw: "/meshdata/"


task:
  randomize: False
  randomization_params:
    frequency: 600   # Define how many simulation steps between generating new randomizations
    observations:
      range: [ 0, .002 ] # range for the white noise
      range_correlated: [ 0, .001 ] # range for correlated noise, refreshed with freq `frequency`
      operation: "additive"
      distribution: "gaussian"
      schedule: "linear"   # "constant" is to turn on noise after `schedule_steps` num steps
      schedule_steps: 40000
    actions:
      range: [ 0., .05 ]
      range_correlated: [ 0, .015 ] # range for correlated noise, refreshed with freq `frequency`
      operation: "additive"
      distribution: "gaussian"
      schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
      schedule_steps: 40000
    sim_params:
      gravity:
        range: [ 0, 0.4 ]
        operation: "additive"
        distribution: "gaussian"
        schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        schedule_steps: 40000
    actor_params:
      hand:
        color: True
        tendon_properties:
          damping:
            range: [ 0.3, 3.0 ]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          stiffness:
            range: [ 0.75, 1.5 ]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        dof_properties:
          damping:
            range: [ 0.3, 3.0 ]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          stiffness:
            range: [ 0.75, 1.5 ]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          lower:
            range: [ 0, 0.01 ]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          upper:
            range: [ 0, 0.01 ]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        rigid_body_properties:
          mass:
            range: [ 0.5, 1.5 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        rigid_shape_properties:
          friction:
            num_buckets: 250
            range: [ 0.7, 1.3 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
      object:
        scale:
          range: [ 0.95, 1.05 ]
          operation: "scaling"
          distribution: "uniform"
          schedule: "linear"  # "linear" will scale the current random sample by ``min(current num steps, schedule_steps) / schedule_steps`
          schedule_steps: 30000
        rigid_body_properties:
          mass:
            range: [ 0.5, 1.5 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by ``min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        rigid_shape_properties:
          friction:
            num_buckets: 250
            range: [ 0.7, 1.3 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000

sim:
  substeps: 2
  physx:
    num_threads: 4
    solver_type: 1  # 0: pgs, 1: tgs
    num_position_iterations: 8 # 8 bottle
    num_velocity_iterations: 0
    contact_offset: 0.002
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 1000.0
    default_buffer_size_multiplier: 5.0
  flex:
    num_outer_iterations: 5
    num_inner_iterations: 20
    warm_start: 0.8
    relaxation: 0.75